using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace DataAccess.Migrations
{
    /// <inheritdoc />
    public partial class mig2 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Employees",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 53, 131, 194, 3, 8, 79, 18, 122, 158, 91, 187, 244, 30, 142, 7, 135, 255, 98, 193, 189, 116, 57, 62, 219, 74, 72, 219, 59, 40, 181, 213, 118, 219, 114, 151, 111, 231, 195, 59, 212, 76, 78, 218, 177, 248, 161, 65, 36, 189, 117, 12, 28, 236, 51, 68, 41, 101, 125, 19, 240, 241, 134, 250, 38 }, new byte[] { 196, 97, 34, 77, 117, 89, 127, 29, 168, 47, 177, 206, 49, 157, 121, 133, 187, 149, 178, 65, 190, 254, 183, 34, 9, 151, 124, 108, 62, 168, 253, 130, 219, 44, 149, 12, 136, 161, 165, 250, 3, 31, 114, 117, 52, 17, 110, 174, 247, 36, 244, 173, 217, 158, 243, 149, 249, 67, 255, 144, 194, 89, 99, 208, 106, 59, 221, 255, 216, 176, 249, 92, 231, 45, 249, 146, 133, 13, 151, 178, 19, 72, 16, 141, 129, 221, 175, 160, 175, 10, 102, 71, 234, 79, 20, 129, 4, 66, 211, 88, 178, 241, 228, 246, 76, 81, 63, 18, 58, 32, 206, 204, 138, 132, 169, 165, 172, 34, 70, 32, 193, 186, 123, 248, 78, 222, 68, 214 } });

            migrationBuilder.UpdateData(
                table: "Employees",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 127, 165, 119, 219, 56, 252, 159, 99, 93, 150, 48, 101, 237, 89, 243, 41, 44, 11, 99, 134, 81, 67, 71, 138, 56, 19, 19, 209, 152, 154, 72, 238, 250, 147, 25, 135, 29, 148, 183, 152, 14, 0, 111, 236, 255, 145, 76, 32, 158, 52, 17, 133, 114, 137, 254, 176, 241, 169, 64, 187, 14, 61, 186, 154 }, new byte[] { 62, 76, 41, 14, 149, 79, 138, 27, 5, 253, 158, 77, 34, 162, 63, 252, 78, 5, 105, 90, 206, 187, 122, 145, 189, 172, 23, 22, 120, 128, 57, 55, 164, 252, 129, 107, 10, 129, 115, 175, 223, 69, 223, 183, 90, 137, 165, 68, 219, 27, 254, 46, 14, 110, 147, 159, 92, 12, 216, 223, 38, 45, 207, 161, 123, 248, 170, 127, 40, 255, 128, 5, 237, 219, 209, 30, 229, 17, 142, 253, 108, 33, 151, 127, 64, 229, 112, 225, 253, 121, 120, 171, 179, 93, 52, 9, 38, 138, 197, 121, 36, 36, 121, 69, 57, 101, 38, 147, 179, 20, 61, 217, 177, 8, 252, 78, 157, 77, 140, 103, 4, 13, 79, 20, 233, 27, 213, 65 } });

            migrationBuilder.InsertData(
                table: "VocationLeaveRequests",
                columns: new[] { "Id", "EmployeeId", "EndingDate", "RequestApprovalStatusId", "RequestDate", "ResponseDate", "StartingDate", "VocationLeaveTypeId" },
                values: new object[,]
                {
                    { 1, 2, new DateTime(2021, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), 1, new DateTime(2024, 1, 26, 20, 33, 28, 258, DateTimeKind.Local).AddTicks(7604), null, new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), 1 },
                    { 2, 2, new DateTime(2022, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), 2, new DateTime(2024, 1, 26, 20, 33, 28, 258, DateTimeKind.Local).AddTicks(7616), null, new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), 2 }
                });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "VocationLeaveRequests",
                keyColumn: "Id",
                keyValue: 1);

            migrationBuilder.DeleteData(
                table: "VocationLeaveRequests",
                keyColumn: "Id",
                keyValue: 2);

            migrationBuilder.UpdateData(
                table: "Employees",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 4, 80, 137, 65, 9, 233, 46, 191, 61, 218, 77, 170, 159, 30, 241, 52, 194, 220, 63, 202, 247, 7, 72, 182, 153, 58, 40, 253, 195, 75, 150, 131, 144, 62, 88, 8, 205, 63, 134, 163, 239, 228, 154, 40, 125, 213, 170, 170, 13, 104, 188, 75, 20, 43, 46, 234, 234, 77, 20, 107, 149, 185, 204, 198 }, new byte[] { 187, 54, 155, 240, 17, 109, 163, 216, 142, 251, 174, 138, 99, 21, 213, 168, 228, 26, 172, 253, 142, 213, 131, 193, 169, 239, 25, 138, 168, 124, 194, 105, 7, 224, 96, 188, 16, 149, 25, 255, 195, 35, 35, 203, 76, 144, 174, 31, 130, 53, 253, 158, 170, 189, 87, 189, 81, 78, 162, 235, 94, 181, 4, 158, 154, 181, 232, 8, 162, 186, 222, 215, 116, 138, 135, 217, 61, 28, 38, 14, 81, 130, 94, 100, 33, 87, 164, 136, 225, 186, 51, 164, 180, 219, 65, 85, 233, 42, 254, 66, 201, 23, 106, 204, 221, 102, 140, 219, 90, 111, 134, 131, 216, 248, 174, 255, 130, 104, 44, 202, 131, 251, 31, 210, 181, 52, 152, 53 } });

            migrationBuilder.UpdateData(
                table: "Employees",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 157, 129, 44, 59, 203, 125, 227, 119, 187, 14, 63, 193, 168, 183, 168, 15, 174, 254, 8, 155, 29, 230, 156, 234, 113, 236, 56, 143, 248, 72, 211, 255, 13, 190, 187, 211, 95, 14, 8, 150, 139, 236, 120, 121, 223, 18, 3, 22, 66, 38, 225, 163, 59, 238, 128, 8, 220, 140, 230, 161, 205, 64, 18, 136 }, new byte[] { 78, 127, 157, 122, 72, 42, 231, 135, 37, 114, 225, 90, 206, 139, 0, 52, 100, 48, 189, 58, 22, 141, 4, 3, 50, 148, 88, 52, 236, 9, 18, 205, 59, 41, 83, 135, 213, 243, 38, 101, 152, 183, 187, 78, 22, 128, 203, 64, 232, 227, 64, 67, 7, 82, 105, 19, 184, 165, 225, 223, 121, 16, 67, 231, 130, 87, 105, 103, 63, 26, 205, 171, 36, 31, 107, 186, 95, 40, 105, 131, 177, 100, 67, 175, 174, 144, 159, 170, 175, 250, 33, 205, 222, 114, 43, 175, 62, 255, 233, 255, 252, 161, 47, 244, 166, 4, 176, 93, 116, 146, 73, 70, 133, 137, 240, 143, 194, 156, 37, 51, 213, 217, 224, 41, 61, 247, 249, 52 } });
        }
    }
}
